---
name: "qt"
suites:
- "precise"
architectures:
- "amd64"
packages: 
- "mingw-w64"
- "g++-mingw-w64"
- "zip"
- "unzip"
- "faketime"
reference_datetime: "2011-01-30 00:00:00"
remotes: []
files:
- "qt-everywhere-opensource-src-4.8.7.tar.gz"
- "qmake.conf.win64"
script: |
  # Defines
  export TZ=UTC
  INDIR=$HOME/build
  TEMPDIR=$HOME/tmp
  # Integrity Check
  echo "e2882295097e47fe089f8ac741a95fef47e0a73a3f3cdf21b56990638f626ea0  qt-everywhere-opensource-src-4.8.7.tar.gz" | sha256sum -c
  echo "7a7103c48a251f977c870bae0fd46ae9543d5dda6d7c06f29cf2be7e6bae76d2  qmake.conf.win64" | sha256sum -c

  for BITS in 32 64; do # for architectures
    #
    INSTALLPREFIX=$HOME/staging${BITS}
    BUILDDIR=$HOME/build${BITS}
    if [ "$BITS" == "32" ]; then
      HOST=i686-w64-mingw32
    else
      HOST=x86_64-w64-mingw32
    fi
    #
    mkdir -p $INSTALLPREFIX $INSTALLPREFIX/host/bin $BUILDDIR
    #
    cd $BUILDDIR
    #
    tar xzf $INDIR/qt-everywhere-opensource-src-4.8.7.tar.gz
    cd qt-everywhere-opensource-src-4.8.7
    SPECNAME="win32-g++"
    SPECFILE="mkspecs/${SPECNAME}/qmake.conf"
    cp $INDIR/qmake.conf.win64 $SPECFILE
    sed 's/$TODAY/2011-01-30/' -i configure
    # Before we tried to pass arguments to ar (static linking) in using QMAKE_LIB, however
    #  qt removes the arguments for ar and provides a script which makes it impossible to pass the determinism flag -
    #  so rather than try to replace ar, post-process all libraries and plugins at the end.
    #
    # Don't load faketime while compiling Qt, qmake will get stuck in nearly infinite loops
    #export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1
    #export FAKETIME=$REFERENCE_DATETIME
    #
    # Compile static libraries, and use statically linked openssl (-openssl-linked):
    ./configure -prefix $INSTALLPREFIX -bindir $INSTALLPREFIX/host/bin -confirm-license -release -opensource -static -qt-zlib -qt-libpng -no-libmng -qt-libjpeg -no-sql-mysql -no-sql-oci -no-sql-ibase -stl -no-qt3support -xplatform $SPECNAME -device-option CROSS_COMPILE="$HOST-" -no-multimedia -no-audio-backend -no-phonon -no-phonon-backend -no-declarative -no-script -no-scripttools -no-javascript-jit -no-webkit -svg -no-xmlpatterns -no-sql-sqlite -no-nis -no-cups -no-iconv -no-dbus -no-gif -no-libtiff -opengl no -nomake examples -nomake demos -nomake docs -v
    find . -name *.prl | xargs -l sed 's|/\.||' -i
    find . -name *.prl | xargs -l sed 's|/$||' -i
    make $MAKEOPTS install
    # post-process all generated libraries and plugins to be deterministic
    # extract them to a temporary directory then re-build them deterministically
    for LIB in $(find $INSTALLPREFIX -name *.a); do
        rm -rf $TEMPDIR && mkdir $TEMPDIR && cd $TEMPDIR
        $HOST-ar xv $LIB | cut -b5- > /tmp/list.txt
        rm $LIB
        $HOST-ar crsD $LIB $(cat /tmp/list.txt)
    done
    #
    cd $INSTALLPREFIX
    find . -name *.prl | xargs -l sed 's|/$||' -i
    # as zip stores file timestamps, use faketime to intercept stat calls to set dates for all files to reference date
    export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1
    export FAKETIME=$REFERENCE_DATETIME
    find -print0 | xargs -r0 touch # fix up timestamps before packaging
    find | sort | zip -X@ $OUTDIR/qt-win${BITS}-4.8.7-gitian-r3.zip
    unset LD_PRELOAD
    unset FAKETIME
  done # for BITS in
